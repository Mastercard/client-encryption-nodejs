language: node_js
git:
  depth: false  # "Shallow clone detected during the analysis"
matrix:
  fast_finish: true
  include:
    - node_js: 6.12.3
    - node_js: 6
    - node_js: 7
    - node_js: 8
    - node_js: 9
    - node_js: 10
    - node_js: 11
    - node_js: node        # latest stable release
    - node_js: "lts/*"     # latest LTS release
      env:
        # Do not run analysis on PR (secure env variables like SONAR_TOKEN are not always available)
        - WITH_SONAR_ANALYSIS=$([ "$TRAVIS_PULL_REQUEST" = "false" ] && echo true || echo false)
install:
  - npm install
  - |
    test "$WITH_SONAR_ANALYSIS" = "true" \
       && wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION.zip \
       && unzip sonar-scanner-cli-$SONAR_SCANNER_VERSION.zip || echo 'Skipping Sonar Scanner installation'
script:
  - npm test
  - npm run coverage
after_success:
  - |
    test "$WITH_SONAR_ANALYSIS" = "true" && sonar-scanner-$SONAR_SCANNER_VERSION/bin/sonar-scanner \
      -Dsonar.projectName=$SONAR_PROJECT_NAME \
      -Dsonar.projectKey=$SONAR_PROJECT_KEY \
      -Dsonar.organization=$SONAR_ORGANIZATION_KEY \
      -Dsonar.sources=./lib \
      -Dsonar.tests=./test \
      -Dsonar.testExecutionReportPaths=test-results.xml \
      -Dsonar.javascript.lcov.reportPaths=.nyc_output/coverage.lcov \
      -Dsonar.host.url=$SONAR_URL \
      -Dsonar.login=$SONAR_TOKEN || echo 'Skipping Sonar Scanner execution'
